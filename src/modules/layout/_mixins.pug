//- popup
mixin popup()
	.popup.uk-flex-top(data-uk-modal)&attributes(attributes)
		.popup__body.uk-modal-dialog.uk-modal-body.uk-margin-auto-vertical
			button.popup__close.uk-modal-close-default(type="button" data-uk-close)
			block

//- Slider dots and navigation

mixin slider-dots()
	ul.uk-slider-nav.uk-dotnav.slidedots&attributes(attributes)
mixin slideshow-dots()
	ul.uk-slideshow-nav.uk-dotnav.slidedots&attributes(attributes)

mixin slider-nav()
	.slider-nav&attributes(attributes)
		a.slidenav.slidenav-prev(href="#" data-uk-slider-item="previous")
			+icon('arrow-left')
		ul.uk-slider-nav.uk-dotnav.slidedots
		a.slidenav.slidenav-next(href="#" data-uk-slider-item="next")
			+icon('arrow-right')

mixin slideshow-nav()
	a.slidenav.slidenav-prev(href="#" data-uk-slideshow-item="previous")&attributes(attributes)
		+icon('arrow-left')
	a.slidenav.slidenav-next(href="#" data-uk-slideshow-item="next")&attributes(attributes)
		+icon('arrow-right')



//- iconset

mixin icon(icon, filler = 'currentColor')
	case icon
		when 'hphones'
			svg(width='43' height='43' viewbox='0 0 43 43' fill='none' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(d='M6.47458 14.3941C6.82603 7.72995 10.475 3.38574 15.1105 1.37052C17.0857 0.511218 19.2287 0.0825195 21.3589 0.0825195C23.49 0.0825195 25.6334 0.511218 27.6081 1.371C32.2475 3.38622 35.8965 7.73471 36.245 14.3989C37.7629 14.6883 39.1196 15.4351 40.1615 16.4894C41.5096 17.8523 42.3408 19.7235 42.3408 21.7878C42.3408 23.865 41.5015 25.7477 40.1453 27.1063L40.1405 27.1039C38.987 28.2622 37.4615 29.0437 35.7634 29.254C35.1125 31.9211 33.8708 34.1261 32.2542 35.8591C30.732 37.4942 28.8794 38.7007 26.8738 39.4784C26.6101 41.4531 24.3025 43.0001 21.4929 43.0001C18.5082 43.0001 16.0886 41.2543 16.0886 39.1022C16.0886 36.952 18.5082 35.2067 21.4929 35.2067C23.2816 35.2067 24.8657 35.8323 25.849 36.7975C27.4632 36.1704 28.9476 35.2019 30.1636 33.8987C32.0625 31.8634 33.3181 28.9779 33.3996 25.2393V21.7878V15.7045H33.4053V15.6869C33.4812 9.61689 30.4254 5.7257 26.4737 4.009C24.8791 3.31516 23.1256 2.96801 21.3589 2.96801C19.5945 2.96801 17.8401 3.31516 16.245 4.009C12.3161 5.71711 9.27423 9.57111 9.31286 15.5829C9.3162 15.6225 9.31858 15.6625 9.31858 15.7045V21.7873V27.8683C9.31858 28.6661 8.67387 29.3108 7.87989 29.3108C5.80793 29.3108 3.93243 28.4691 2.57528 27.1058C2.54429 27.0772 2.51806 27.0486 2.49136 27.0171C1.18285 25.6614 0.376953 23.814 0.376953 21.7878C0.376953 19.7149 1.21861 17.8327 2.57767 16.4694L2.57576 16.4651C3.61723 15.4198 4.96531 14.6792 6.47458 14.3941ZM6.44168 26.1959V21.7878V17.3773C5.74212 17.6067 5.11743 17.9982 4.60958 18.5065L4.60624 18.5042L4.60385 18.5065C3.77125 19.3415 3.25338 20.5017 3.25338 21.7873C3.25338 23.0382 3.74455 24.1693 4.53852 25L4.6091 25.0662C5.11743 25.5751 5.74212 25.9656 6.44168 26.1959ZM36.2775 21.7878V26.1983C36.978 25.9704 37.6022 25.5793 38.1091 25.0715L38.1115 25.0691L38.1091 25.0667C38.946 24.227 39.4639 23.0672 39.4639 21.7878C39.4639 20.5108 38.9531 19.3549 38.1282 18.5194C37.6155 18.003 36.9832 17.6029 36.2775 17.3707V21.7878Z' fill='#96C12A')
		when 'arrow-left'
			svg(width="61" height="14" viewBox="0 0 61 14" fill='none' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(d="M0.590279 6.28463C0.258972 6.61594 0.258972 7.15309 0.590279 7.4844L5.98922 12.8833C6.32052 13.2146 6.85767 13.2146 7.18898 12.8833C7.52028 12.552 7.52028 12.0149 7.18898 11.6836L2.38992 6.88452L7.18898 2.08546C7.52028 1.75416 7.52028 1.217 7.18898 0.885697C6.85767 0.554391 6.32052 0.554391 5.98922 0.885697L0.590279 6.28463ZM60.3428 6.03616L1.19016 6.03616L1.19016 7.73288L60.3428 7.73288L60.3428 6.03616Z" fill="#696969")
		when 'arrow-right'
			svg(width="61" height="14" viewBox="0 0 61 14" fill='none' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(d="M60.6758 6.28463C61.0071 6.61594 61.0071 7.15309 60.6758 7.4844L55.2769 12.8833C54.9456 13.2146 54.4084 13.2146 54.0771 12.8833C53.7458 12.552 53.7458 12.0149 54.0771 11.6836L58.8762 6.88452L54.0771 2.08546C53.7458 1.75416 53.7458 1.217 54.0771 0.885697C54.4084 0.554391 54.9456 0.554391 55.2769 0.885697L60.6758 6.28463ZM0.92334 6.03616L60.076 6.03616L60.076 7.73288L0.92334 7.73288L0.92334 6.03616Z" fill="#696969")
		when 'angle-left'
			svg(width="25" height="47" viewBox="0 0 25 47" fill='none' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(d="M0.958549 22.402L21.9587 1.45996C22.6468 0.774224 23.7607 0.775377 24.4476 1.46351C25.134 2.15156 25.1322 3.26614 24.4441 3.95241L4.69389 23.648L24.4448 43.3436C25.1328 44.0299 25.1346 45.1438 24.4483 45.832C24.104 46.1769 23.6529 46.3494 23.2018 46.3494C22.7518 46.3494 22.3025 46.1781 21.9588 45.8355L0.958549 24.894C0.627163 24.5643 0.441206 24.1156 0.441206 23.648C0.441206 23.1805 0.627695 22.7324 0.958549 22.402Z" fill="#96C12A")
		when 'angle-right'
			svg(width="26" height="47" viewBox="0 0 26 47" fill='none' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(d="M24.6518 22.402L3.65164 1.45996C2.9636 0.774224 1.84964 0.775377 1.16274 1.46351C0.476384 2.15156 0.478158 3.26614 1.16629 3.95241L20.9165 23.648L1.16558 43.3436C0.477537 44.0299 0.475763 45.1438 1.16204 45.832C1.50637 46.1769 1.95747 46.3494 2.40857 46.3494C2.85852 46.3494 3.30784 46.1781 3.65156 45.8355L24.6518 24.894C24.9832 24.5643 25.1691 24.1156 25.1691 23.648C25.1691 23.1805 24.9827 22.7324 24.6518 22.402Z" fill="#96C12A")
		when 'play-btn'
			svg(width="129" height="130" viewBox="0 0 129 130" fill='none' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				circle(cx="64.7239" cy="64.7835" r="64.2601" fill="white")
				path(d="M64.7246 10.2834C34.3494 10.2834 9.72461 34.6839 9.72461 64.7834C9.72461 94.883 34.3494 119.283 64.7246 119.283C95.0999 119.283 119.725 94.883 119.725 64.7834C119.725 34.6839 95.0999 10.2834 64.7246 10.2834ZM83.734 67.6724L56.234 84.7036C55.6775 85.0479 55.0448 85.2209 54.4121 85.2209C53.8389 85.2209 53.2648 85.0796 52.7454 84.7935C51.6527 84.1931 50.9746 83.0537 50.9746 81.8147V47.7522C50.9746 46.5132 51.6527 45.3738 52.7454 44.7734C53.838 44.1697 55.1742 44.2063 56.234 44.8633L83.734 61.8945C84.7386 62.5183 85.3496 63.6094 85.3496 64.7834C85.3496 65.9575 84.7386 67.0488 83.734 67.6724Z" fill="#96C12A")
		when 'yt'
			svg(width="43" height="43" viewBox="0 0 43 43" fill=filler xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(d="M30.7392 0.732422H11.8708C5.47349 0.732422 0.246094 5.93491 0.246094 12.3571V31.2256C0.246094 37.6229 5.4486 42.8503 11.8708 42.8503H30.7392C37.1366 42.8503 42.364 37.6478 42.364 31.2256V12.3571C42.3391 5.93491 37.1366 0.732422 30.7392 0.732422ZM38.6052 31.2007C38.6052 35.5568 35.0705 39.0916 30.7143 39.0916H11.8708C7.51466 39.0916 3.97995 35.5568 3.97995 31.2007V12.3323C3.97995 7.97609 7.51466 4.44138 11.8708 4.44138H30.7392C35.0954 4.44138 38.6301 7.97609 38.6301 12.3323L38.6052 31.2007Z" fill=filler)
				path(d="M29.4946 12.4065C25.6611 12.1327 17.1231 12.1327 13.2896 12.4065C9.13261 12.6803 8.65966 14.7215 8.63477 21.3429C8.65966 27.9394 9.15751 29.9805 13.2896 30.2793C17.1231 30.5531 25.6611 30.5531 29.4946 30.2793C33.6516 30.0054 34.1246 27.9643 34.1743 21.3429C34.1246 14.7215 33.6516 12.6803 29.4946 12.4065ZM17.7454 25.5995V17.0614L26.7066 21.318L17.7454 25.5995Z" fill=filler)
		when 'vk'
			svg(width="43" height="43" viewBox="0 0 43 43" fill=filler xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(d="M30.9927 0.732422H12.1242C5.72691 0.732422 0.499512 5.93493 0.499512 12.3572V31.2256C0.499512 37.6229 5.70202 42.8503 12.1242 42.8503H30.9927C37.39 42.8503 42.6174 37.6478 42.6174 31.2256V12.3572C42.5925 5.93493 37.39 0.732422 30.9927 0.732422ZM38.8587 31.2007C38.8587 35.5568 35.3239 39.0916 30.9678 39.0916H12.1242C7.76808 39.0916 4.23337 35.5568 4.23337 31.2007V12.3323C4.23337 7.9761 7.76808 4.44138 12.1242 4.44138H30.9927C35.3488 4.44138 38.8835 7.9761 38.8835 12.3323L38.8587 31.2007Z" fill=filler)
				path(d="M31.64 25.575C31.1421 24.9776 30.5696 24.4299 30.022 23.9072C29.8228 23.733 29.6237 23.5338 29.4494 23.3596C29.2005 23.1106 29.076 22.9364 29.0512 22.787C29.0512 22.6626 29.1258 22.4634 29.325 22.1896C29.6237 21.7665 29.9473 21.3433 30.2709 20.9201C30.5447 20.5467 30.8434 20.1733 31.1172 19.8L31.167 19.7253C31.7146 18.9785 32.2623 18.2068 32.561 17.2609C32.6357 16.9871 32.7352 16.5888 32.5112 16.2404C32.2872 15.8919 31.9138 15.7923 31.6151 15.7425C31.4906 15.7176 31.3661 15.7176 31.2417 15.7176H27.7568C27.1593 15.7176 26.7362 15.9914 26.5121 16.564C26.3379 17.012 26.1139 17.5596 25.8649 18.0575C25.392 19.0283 24.7697 20.1485 23.8984 21.0944L23.8487 21.1441C23.7989 21.2188 23.6993 21.3184 23.6495 21.3433C23.5499 21.2686 23.4504 20.945 23.4504 20.7708V20.7459V16.7133C23.4504 16.6884 23.4504 16.6635 23.4504 16.6635C23.3757 16.091 23.2263 15.5185 22.3053 15.3193C22.2804 15.3193 22.2555 15.3193 22.2058 15.3193H18.5715C17.8745 15.3193 17.526 15.6429 17.2273 15.9665C17.1526 16.0661 16.9286 16.3399 17.0281 16.6386C17.1526 16.9622 17.4762 17.0369 17.6007 17.0618C17.9989 17.1365 18.1981 17.3605 18.2728 17.7837C18.3972 18.6051 18.4221 19.5013 18.3225 20.5965C18.2977 20.8952 18.2479 21.0944 18.1732 21.2935C18.1483 21.3184 18.1483 21.3682 18.1234 21.3931C18.0985 21.3682 18.0487 21.3682 18.0238 21.3433C17.75 21.1442 17.526 20.8454 17.3269 20.5716C16.5054 19.4266 15.8333 18.1571 15.2359 16.7133C14.987 16.1159 14.5389 15.7923 13.9415 15.7674C12.8213 15.7425 11.7759 15.7425 10.7802 15.7674C10.3072 15.7674 9.95871 15.9168 9.78447 16.2155C9.61022 16.5142 9.61022 16.8627 9.80936 17.3107C11.2033 20.4223 12.4977 22.6875 13.9415 24.654C14.9621 26.0479 16.0076 26.9939 17.1775 27.6908C18.4221 28.4127 19.841 28.7612 21.459 28.7612C21.6581 28.7612 21.8324 28.7612 22.0315 28.7612C23.0521 28.7114 23.4504 28.3131 23.5002 27.3423C23.5251 26.8196 23.5748 26.3964 23.774 26.0479C23.8238 25.9484 23.8984 25.8737 23.9482 25.8737C23.998 25.8737 24.0976 25.8986 24.1971 25.9733C24.3714 26.0977 24.5456 26.2471 24.695 26.4213C24.8195 26.5707 24.9688 26.72 25.0933 26.8694C25.3671 27.193 25.6658 27.5166 25.9894 27.8402C26.6864 28.5621 27.4829 28.8857 28.3791 28.811H31.6151C31.9885 28.7861 32.3121 28.5621 32.4863 28.2385C32.7103 27.8402 32.7103 27.3423 32.4863 26.8943C32.2374 26.3218 31.9138 25.9235 31.64 25.575Z" fill=filler)
		when 'inst'
			svg(width="43" height="43" viewBox="0 0 43 43" fill=filler xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(d="M31.3662 0.28418H12.4978C6.10044 0.28418 0.873047 5.48669 0.873047 11.9089V30.7773C0.873047 37.1747 6.07555 42.4021 12.4978 42.4021H31.3662C37.7635 42.4021 42.9909 37.1996 42.9909 30.7773V11.9089C42.9909 5.48669 37.7884 0.28418 31.3662 0.28418ZM39.2571 30.7524C39.2571 35.1086 35.7224 38.6433 31.3662 38.6433H12.4978C8.14162 38.6433 4.6069 35.1086 4.6069 30.7524V11.884C4.6069 7.52786 8.14162 3.99314 12.4978 3.99314H31.3662C35.7224 3.99314 39.2571 7.52786 39.2571 11.884V30.7524Z" fill=filler)
				path(d="M21.9566 10.4653C15.9824 10.4653 11.1035 15.3193 11.1035 21.3184C11.1035 27.2926 15.9575 32.1715 21.9566 32.1715C27.9556 32.1715 32.7848 27.2926 32.7848 21.3184C32.7848 15.3442 27.9308 10.4653 21.9566 10.4653ZM21.9566 28.4376C18.0485 28.4376 14.8374 25.2514 14.8374 21.3184C14.8374 17.3854 18.0236 14.1992 21.9566 14.1992C25.8896 14.1992 29.0509 17.4103 29.0509 21.3184C29.0509 25.2514 25.8647 28.4376 21.9566 28.4376Z" fill=filler)
		when 'wa'
			svg(width="36" height="36" viewBox="0 0 36 36" fill=filler xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(d="M0.641602 35.9378L3.11645 26.8773C1.5854 24.2137 0.788414 21.2145 0.788414 18.1314C0.788414 8.48367 8.63244 0.639648 18.2802 0.639648C22.9572 0.639648 27.3616 2.46433 30.6544 5.77811C33.9472 9.0919 35.7719 13.4753 35.7719 18.1524C35.7719 27.8001 27.9279 35.6441 18.2802 35.6441C15.3439 35.6441 12.4706 34.9101 9.91181 33.5049L0.641602 35.9378ZM10.3523 30.3379C12.8271 31.806 15.1761 32.6869 18.2802 32.6869C26.292 32.6869 32.8147 26.1642 32.8357 18.1524C32.8357 10.1196 26.3339 3.59689 18.3011 3.59689C10.2893 3.59689 3.74565 10.1196 3.74565 18.1314C3.74565 21.4032 4.71043 23.8571 6.3044 26.4159L4.83627 31.785C4.83627 31.7641 10.3523 30.3379 10.3523 30.3379ZM27.1099 22.2841C27.0051 22.0954 26.7114 21.9905 26.271 21.7808C25.8306 21.571 23.6913 20.5014 23.2928 20.3546C22.8943 20.2078 22.6007 20.1448 22.307 20.5643C22.0134 21.0047 21.1745 21.9905 20.9228 22.2841C20.6711 22.5777 20.4195 22.6197 19.979 22.389C19.5386 22.1793 18.1334 21.7178 16.4555 20.2287C15.1551 19.0752 14.2743 17.628 14.0226 17.2086C13.7709 16.7681 14.0016 16.5374 14.2113 16.3067C14.4001 16.118 14.6518 15.8034 14.8615 15.5307C15.0922 15.279 15.1551 15.0903 15.302 14.7966C15.4488 14.503 15.3859 14.2513 15.26 14.0206C15.1551 13.8109 14.2743 11.6506 13.9177 10.7698C13.5612 9.90986 13.2046 10.0357 12.932 10.0147L12.093 9.99375C11.7994 9.99375 11.338 10.0986 10.9185 10.5391C10.52 10.9795 9.38748 12.0282 9.38748 14.1884C9.38748 16.3487 10.9605 18.425 11.1702 18.7187C11.3799 19.0123 14.2533 23.4167 18.6367 25.3253C19.6854 25.7657 20.5033 26.0383 21.1325 26.2481C22.1812 26.5837 23.125 26.5417 23.88 26.4159C24.719 26.29 26.4598 25.3672 26.8373 24.3395C27.2148 23.3538 27.2148 22.4729 27.1099 22.2841Z" fill=filler)
		when 'pin'
			svg(width="27" height="36" viewBox="0 0 27 36" fill="none" xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				path(fill-rule="evenodd" clip-rule="evenodd" d="M12.5918 1.96593C10.9536 2.09654 9.56392 2.47447 8.19105 3.16265C7.03302 3.74315 6.11793 4.40417 5.19601 5.32605C4.23306 6.28904 3.53979 7.2646 2.96926 8.45964C2.36713 9.72087 1.96557 11.1253 1.84968 12.3753C1.80501 12.8569 1.80458 14.0864 1.84888 14.6034C2.02066 16.6087 2.83177 18.5747 4.77332 21.6916C7.31637 25.7741 11.7992 32.5412 12.8969 33.9545C13.1333 34.2588 13.2388 34.3126 13.5488 34.2865C13.7778 34.2672 13.8889 34.2049 14.0369 34.013C14.5005 33.4115 19.8813 25.2426 22.1204 21.7407C23.3634 19.7968 23.7847 19.0534 24.1915 18.0859C24.781 16.684 25.0094 15.59 25.0423 14.0093C25.0667 12.8385 24.9791 11.9494 24.7396 10.9394C24.2842 9.01852 23.2268 7.03485 21.9419 5.69088C21.2506 4.96784 20.4826 4.3095 19.8209 3.87278C17.9322 2.62621 15.5325 1.92516 13.239 1.94985C12.9557 1.95292 12.6645 1.96015 12.5918 1.96593ZM14.4899 3.46287C15.3175 3.52407 15.8803 3.6399 16.7345 3.92484C18.2811 4.44068 19.3369 5.09225 20.559 6.28505C21.1372 6.84944 21.6087 7.40842 21.9419 7.92446C22.8603 9.34723 23.4361 10.9831 23.5997 12.6346C23.6432 13.0749 23.6432 14.1196 23.5995 14.5587C23.4752 15.8081 23.1145 17.0468 22.5412 18.1916C22.0739 19.125 21.764 19.6231 19.558 22.9878C18.6534 24.3676 17.69 25.8382 17.4173 26.2558C16.8239 27.1643 13.5567 32.0711 13.4843 32.1625C13.4341 32.2259 13.4331 32.2259 13.3849 32.1625C13.0775 31.7579 9.68209 26.6504 8.62424 25.0014C8.33306 24.5475 7.80828 23.7305 7.45801 23.1859C5.76724 20.5568 4.94844 19.2369 4.42461 18.296C3.78475 17.1468 3.39141 15.8632 3.26456 14.5104C3.20785 13.9056 3.24142 12.6866 3.33088 12.1023C3.79476 9.07319 5.51947 6.44989 8.05849 4.91149C9.19698 4.22166 10.4607 3.759 11.8795 3.51262C12.2691 3.44495 12.4402 3.43442 13.186 3.4323C13.658 3.43098 14.2448 3.44472 14.4899 3.46287ZM12.7759 9.04189C11.7091 9.19136 10.6498 9.73697 9.88421 10.5312C9.53038 10.8983 9.31535 11.217 9.02979 11.7976C8.62466 12.6213 8.53164 13.0158 8.53171 13.9102C8.53174 14.446 8.54293 14.5873 8.60842 14.8801C8.83051 15.8724 9.26026 16.6544 9.98231 17.3799C10.5589 17.9594 11.143 18.3272 11.9105 18.5943C12.8789 18.9315 14.1808 18.91 15.1171 18.5415C15.4596 18.4067 15.9725 18.1457 16.2043 17.9883C16.7666 17.6065 17.573 16.6707 17.8996 16.0211C18.031 15.7596 18.2052 15.2275 18.2718 14.884C18.3635 14.4109 18.3571 13.4752 18.2587 12.9784C18.0527 11.9387 17.5818 11.0682 16.8406 10.3568C16.1854 9.72796 15.37 9.29887 14.4634 9.1059C14.0983 9.02816 13.1347 8.99162 12.7759 9.04189ZM14.3248 10.6398C14.461 10.6708 14.7358 10.7762 14.9355 10.8741C15.8479 11.3212 16.5229 12.1529 16.7914 13.1607C16.8654 13.4386 16.8767 13.5469 16.8761 13.9762C16.8754 14.399 16.8632 14.5175 16.792 14.7867C16.52 15.8155 15.8623 16.6366 14.9525 17.0829C14.2783 17.4137 13.31 17.5149 12.5967 17.3291C12.2878 17.2487 11.8052 17.0259 11.519 16.8316C11.249 16.6482 10.864 16.2805 10.6574 16.0087C10.4614 15.7509 10.1559 15.1454 10.0816 14.8675C9.95901 14.409 9.98858 13.4274 10.1397 12.9375C10.4828 11.8256 11.6212 10.7986 12.7404 10.5912C12.9942 10.5442 14.0466 10.5764 14.3248 10.6398Z" fill="#96C12A" stroke="#96C12A" stroke-width="2")
		when 'rounded-plus'
			svg(width="271" height="270" viewBox="0 0 271 270" fill="none" xmlns='http://www.w3.org/2000/svg' preserveAspectRatio="none")&attributes(attributes)
				circle(cx="135.601" cy="135.265" r="128.136" stroke="#F4F4F4" stroke-width="13")
				rect(x="129.29" y="45.2961" width="14.2252" height="179.938" fill="#F4F4F4")
				rect(x="225.57" y="124.572" width="14.2252" height="179.938" transform="rotate(90 225.57 124.572)" fill="#F4F4F4")


//- type: `jpg`/ `png` or jpg/ png if so-called var inited
//- src: `${path}/to/img`  - without prefixes and dimensions
//- dimentions: `s`/ `sml`/ `sl`/ `smlx`/ `sx`....
//- retina: true/ false

//- Атрибуты типа class, alt записываются как обычно в скобках сразу за миксином  -- +picture(jpg, 'tmp')(class="pic" alt="lev")

//- image nameing: anyname-sm.jpg

- var jpg = `jpg`, png = `png`

- var globalRetinaUsage = `` //- `` -if false
- var globalDimentionsUsage = `sml`

- var postfixRetina = '@2x'
- var postfix = { sm: `-sm`, md: `-md`, lg: `-lg`, xl: `-xl` } //- `smlx`

mixin picture(type, src, dimentions = globalDimentionsUsage, retina = globalRetinaUsage)
	picture
		if dimentions.includes(`n`)
			source(srcset=ipl data-srcset!=`${retina.includes(`n`) ? `${src + postfixRetina}.webp 2x,` : ``} ${src}.webp${retina.includes(`n`) ? ` 1x` : ``}` type=`image/webp`)
			source(srcset=ipl data-srcset!=`${retina.includes(`n`) ? `${src + postfixRetina}.${type} 2x,` : ``} ${src}.${type}${retina.includes(`n`) ? ` 1x` : ``}` type=`image/${type}`)
			img.lazyload(src!=ipl data-src!=`${src}.${type}` alt='')&attributes(attributes)
		else
			if dimentions.includes(`x`)
				source(media=`(min-width: ${xl}px)` srcset=ipl data-srcset!=`${retina.includes(`x`) ? `${src + postfix.xl + postfixRetina}.webp 2x,` : ``} ${src + postfix.xl}.webp${retina.includes(`x`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${xl}px)` srcset=ipl data-srcset!=`${retina.includes(`x`) ? `${src + postfix.xl + postfixRetina}.${type} 2x,` : ``} ${src + postfix.xl}.${type}${retina.includes(`x`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`l`)
				source(media=`(min-width: ${lg}px)` srcset=ipl data-srcset!=`${retina.includes(`l`) ? `${src + postfix.lg + postfixRetina}.webp 2x,` : ``} ${src + postfix.lg}.webp${retina.includes(`l`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${lg}px)` srcset=ipl data-srcset!=`${retina.includes(`l`) ? `${src + postfix.lg + postfixRetina}.${type} 2x,` : ``} ${src + postfix.lg}.${type}${retina.includes(`l`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`m`)
				source(media=`(min-width: ${md}px)` srcset=ipl data-srcset!=`${retina.includes(`m`) ? `${src + postfix.md + postfixRetina}.webp 2x,` : ``} ${src + postfix.md}.webp${retina.includes(`m`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${md}px)` srcset=ipl data-srcset!=`${retina.includes(`m`) ? `${src + postfix.md + postfixRetina}.${type} 2x,` : ``} ${src + postfix.md}.${type}${retina.includes(`m`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`s`)
				source(media=`(min-width: 0px)` srcset=ipl data-srcset!=`${retina.includes(`s`) ? `${src + postfix.sm + postfixRetina}.webp 2x,` : ``} ${src + postfix.sm}.webp${retina.includes(`s`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: 0px)` srcset=ipl data-srcset!=`${retina.includes(`s`) ? `${src + postfix.sm + postfixRetina}.${type} 2x,` : ``} ${src + postfix.sm}.${type}${retina.includes(`s`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`l`)
				img.lazyload(src!=ipl data-src!=`${src + postfix.lg}.${type}` alt='')&attributes(attributes)
			else
				img.lazyload(src!=ipl data-src!=`${src + postfix.md}.${type}` alt='')&attributes(attributes)
			
mixin picture-min(type, src, minSrc,  dimentions = globalDimentionsUsage, retina = globalRetinaUsage)
	picture
		if dimentions.includes(`n`)
			source(srcset=`${minSrc}-min.${type}` data-srcset!=`${retina.includes(`n`) ? `${src + postfixRetina}.webp 2x,` : ``} ${src}.webp${retina.includes(`n`) ? ` 1x` : ``}` type=`image/webp`)
			source(srcset=`${minSrc}-min.${type}` data-srcset!=`${retina.includes(`n`) ? `${src + postfixRetina}.${type} 2x,` : ``} ${src}.${type}${retina.includes(`n`) ? ` 1x` : ``}` type=`image/${type}`)
			img.lazyload.lazymin(src!=`${minSrc}-min.${type}` data-src!=`${src}.${type}` alt='')&attributes(attributes)
		else
			if dimentions.includes(`x`)
				source(media=`(min-width: ${xl}px)` srcset=`${minSrc + postfix.xl}-min.${type}` data-srcset!=`${retina.includes(`x`) ? `${src + postfix.xl + postfixRetina}.webp 2x,` : ``} ${src + postfix.xl}.webp${retina.includes(`x`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${xl}px)` srcset=`${minSrc + postfix.xl}-min.${type}` data-srcset!=`${retina.includes(`x`) ? `${src + postfix.xl + postfixRetina}.${type} 2x,` : ``} ${src + postfix.xl}.${type}${retina.includes(`x`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`l`)
				source(media=`(min-width: ${lg}px)` srcset=`${minSrc + postfix.lg}-min.${type}` data-srcset!=`${retina.includes(`l`) ? `${src + postfix.lg + postfixRetina}.webp 2x,` : ``} ${src + postfix.lg}.webp${retina.includes(`l`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${lg}px)` srcset=`${minSrc + postfix.lg}-min.${type}` data-srcset!=`${retina.includes(`l`) ? `${src + postfix.lg + postfixRetina}.${type} 2x,` : ``} ${src + postfix.lg}.${type}${retina.includes(`l`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`m`)
				source(media=`(min-width: ${md}px)` srcset=`${minSrc + postfix.md}-min.${type}` data-srcset!=`${retina.includes(`m`) ? `${src + postfix.md + postfixRetina}.webp 2x,` : ``} ${src + postfix.md}.webp${retina.includes(`m`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${md}px)` srcset=`${minSrc + postfix.md}-min.${type}` data-srcset!=`${retina.includes(`m`) ? `${src + postfix.md + postfixRetina}.${type} 2x,` : ``} ${src + postfix.md}.${type}${retina.includes(`m`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`s`)
				source(media=`(min-width: 0px)` srcset=`${minSrc + postfix.sm}-min.${type}` data-srcset!=`${retina.includes(`s`) ? `${src + postfix.sm + postfixRetina}.webp 2x,` : ``} ${src + postfix.sm}.webp${retina.includes(`s`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: 0px)` srcset=`${minSrc + postfix.sm}-min.${type}` data-srcset!=`${retina.includes(`s`) ? `${src + postfix.sm + postfixRetina}.${type} 2x,` : ``} ${src + postfix.sm}.${type}${retina.includes(`s`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`l`)
				img.lazyload.lazymin(src!=`${minSrc + postfix.lg}-min.${type}` data-src!=`${src + postfix.lg}.${type}` alt='')&attributes(attributes)
			else
				img.lazyload.lazymin(src!=`${minSrc + postfix.md}-min.${type}` data-src!=`${src + postfix.md}.${type}` alt='')&attributes(attributes)
